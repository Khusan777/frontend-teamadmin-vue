{"remainingRequest":"/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/src/plugins/aliftech-ui/validations/CalendarDates.js","dependencies":[{"path":"/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/src/plugins/aliftech-ui/validations/CalendarDates.js","mtime":1650944028432},{"path":"/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGNoZWNrVHlwZSB9IGZyb20gJy4uL3V0aWxzJzsKCnZhciBjaGVja0lzVmFsaWREYXRlID0gZnVuY3Rpb24gY2hlY2tJc1ZhbGlkRGF0ZShkYXRlKSB7CiAgaWYgKGNoZWNrVHlwZShkYXRlLCAnZGF0ZScpKSB7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIGlmIChjaGVja1R5cGUoZGF0ZSwgJ3N0cmluZycpKSB7CiAgICB2YXIgZGF0ZVN0cmluZyA9IGRhdGUuc3BsaXQoJy0nKTsKCiAgICBpZiAoZGF0ZVN0cmluZy5sZW5ndGggPT09IDMpIHsKICAgICAgdmFyIHllYXIgPSBwYXJzZUludChkYXRlU3RyaW5nWzBdLCAxMCk7CiAgICAgIHZhciBtb250aCA9IHBhcnNlSW50KGRhdGVTdHJpbmdbMV0sIDEwKTsKICAgICAgdmFyIGRheSA9IHBhcnNlSW50KGRhdGVTdHJpbmdbMl0sIDEwKTsKCiAgICAgIGlmICh5ZWFyICYmIG1vbnRoICYmIGRheSkgewogICAgICAgIGlmICgnSW52YWxpZCBEYXRlJyAhPT0gbmV3IERhdGUoeWVhciwgbW9udGgsIGRheSkudG9TdHJpbmcoKSkgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQoKICByZXR1cm4gZmFsc2U7Cn07CgpleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKGRhdGVzKSB7CiAgaWYgKCFkYXRlcykgcmV0dXJuIHRydWU7CgogIGlmIChjaGVja1R5cGUoZGF0ZXMsICdhcnJheScpKSB7CiAgICByZXR1cm4gZGF0ZXMuZXZlcnkoZnVuY3Rpb24gKGRhdGUpIHsKICAgICAgcmV0dXJuIGNoZWNrSXNWYWxpZERhdGUoZGF0ZSk7CiAgICB9KTsKICB9CgogIGlmIChkYXRlcyAmJiBjaGVja1R5cGUoZGF0ZXMsICdvYmplY3QnKSkgewogICAgcmV0dXJuICd0bycgaW4gZGF0ZXMgJiYgY2hlY2tJc1ZhbGlkRGF0ZShkYXRlcy50bykgJiYgJ2Zyb20nIGluIGRhdGVzICYmIGNoZWNrSXNWYWxpZERhdGUoZGF0ZXMuZnJvbSk7CiAgfQoKICByZXR1cm4gZmFsc2U7Cn0pOw=="},{"version":3,"sources":["/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/src/plugins/aliftech-ui/validations/CalendarDates.js"],"names":["checkType","checkIsValidDate","date","dateString","split","length","year","parseInt","month","day","Date","toString","dates","every","to","from"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,UAA1B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,IAAI,EAAI;AAC/B,MAAIF,SAAS,CAACE,IAAD,EAAO,MAAP,CAAb,EAA6B;AAC3B,WAAO,IAAP;AACD;;AACD,MAAIF,SAAS,CAACE,IAAD,EAAO,QAAP,CAAb,EAA+B;AAC7B,QAAMC,UAAU,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAnB;;AACA,QAAID,UAAU,CAACE,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,UAAMC,IAAI,GAAGC,QAAQ,CAACJ,UAAU,CAAC,CAAD,CAAX,EAAgB,EAAhB,CAArB;AACA,UAAMK,KAAK,GAAGD,QAAQ,CAACJ,UAAU,CAAC,CAAD,CAAX,EAAgB,EAAhB,CAAtB;AACA,UAAMM,GAAG,GAAGF,QAAQ,CAACJ,UAAU,CAAC,CAAD,CAAX,EAAgB,EAAhB,CAApB;;AACA,UAAIG,IAAI,IAAIE,KAAR,IAAiBC,GAArB,EAA0B;AACxB,YAAI,mBAAmB,IAAIC,IAAJ,CAASJ,IAAT,EAAeE,KAAf,EAAsBC,GAAtB,EAA2BE,QAA3B,EAAvB,EAA8D;AAC5D,iBAAO,IAAP;AACD;AACF;AACF;AACF;;AACD,SAAO,KAAP;AACD,CAlBD;;AAoBA,gBAAe,UAAAC,KAAK,EAAI;AACtB,MAAI,CAACA,KAAL,EAAY,OAAO,IAAP;;AACZ,MAAIZ,SAAS,CAACY,KAAD,EAAQ,OAAR,CAAb,EAA+B;AAC7B,WAAOA,KAAK,CAACC,KAAN,CAAY,UAAAX,IAAI;AAAA,aAAID,gBAAgB,CAACC,IAAD,CAApB;AAAA,KAAhB,CAAP;AACD;;AACD,MAAIU,KAAK,IAAIZ,SAAS,CAACY,KAAD,EAAQ,QAAR,CAAtB,EAAyC;AACvC,WAAO,QAAQA,KAAR,IAAiBX,gBAAgB,CAACW,KAAK,CAACE,EAAP,CAAjC,IAA+C,UAAUF,KAAzD,IAAkEX,gBAAgB,CAACW,KAAK,CAACG,IAAP,CAAzF;AACD;;AACD,SAAO,KAAP;AACD,CATD","sourcesContent":["import { checkType } from '../utils';\n\nconst checkIsValidDate = date => {\n  if (checkType(date, 'date')) {\n    return true;\n  }\n  if (checkType(date, 'string')) {\n    const dateString = date.split('-');\n    if (dateString.length === 3) {\n      const year = parseInt(dateString[0], 10);\n      const month = parseInt(dateString[1], 10);\n      const day = parseInt(dateString[2], 10);\n      if (year && month && day) {\n        if ('Invalid Date' !== new Date(year, month, day).toString()) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport default dates => {\n  if (!dates) return true;\n  if (checkType(dates, 'array')) {\n    return dates.every(date => checkIsValidDate(date));\n  }\n  if (dates && checkType(dates, 'object')) {\n    return 'to' in dates && checkIsValidDate(dates.to) && 'from' in dates && checkIsValidDate(dates.from);\n  }\n  return false;\n};\n"]}]}