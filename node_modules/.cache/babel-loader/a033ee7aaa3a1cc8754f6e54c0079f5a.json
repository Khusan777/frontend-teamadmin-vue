{"remainingRequest":"/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/src/plugins/aliftech-ui/utils/checkType.js","dependencies":[{"path":"/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/src/plugins/aliftech-ui/utils/checkType.js","mtime":1647231276041},{"path":"/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKCi8qKgogKiBDaGVja2luZyBhbiBlbGVtZW50IHR5cGUKICogQHBhcmFtIHtTdHJpbmd8TnVtYmVyfEFycmF5fE9iamVjdH0gZWwKICogQHBhcmFtIHtzdHJpbmd9IHR5cGUKICogQHJldHVybnMge2Jvb2xlYW59CiAqLwpleHBvcnQgdmFyIGNoZWNrVHlwZSA9IGZ1bmN0aW9uIGNoZWNrVHlwZShlbCwgdHlwZSkgewogIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodHlwZSkgPT09ICdbb2JqZWN0IFN0cmluZ10nICYmIHR5cGUubGVuZ3RoKSB7CiAgICB2YXIgY3VyVHlwZSA9IHR5cGVbMF0udG9VcHBlckNhc2UoKSArIHR5cGUuc2xpY2UoMSk7CiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGVsKSA9PT0gIltvYmplY3QgIi5jb25jYXQoY3VyVHlwZSwgIl0iKTsKICB9CgogIHJldHVybiBmYWxzZTsKfTs="},{"version":3,"sources":["/Users/admin/Desktop/MyProjects/frontend-teamadmin-vue/src/plugins/aliftech-ui/utils/checkType.js"],"names":["checkType","el","type","Object","prototype","toString","call","length","curType","toUpperCase","slice"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAKC,IAAL,EAAc;AACrC,MAAIC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,IAA/B,MAAyC,iBAAzC,IAA8DA,IAAI,CAACK,MAAvE,EAA+E;AAC7E,QAAMC,OAAO,GAAGN,IAAI,CAAC,CAAD,CAAJ,CAAQO,WAAR,KAAwBP,IAAI,CAACQ,KAAL,CAAW,CAAX,CAAxC;AACA,WAAOP,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,EAA/B,wBAAkDO,OAAlD,MAAP;AACD;;AACD,SAAO,KAAP;AACD,CANM","sourcesContent":["/**\n * Checking an element type\n * @param {String|Number|Array|Object} el\n * @param {string} type\n * @returns {boolean}\n */\nexport const checkType = (el, type) => {\n  if (Object.prototype.toString.call(type) === '[object String]' && type.length) {\n    const curType = type[0].toUpperCase() + type.slice(1);\n    return Object.prototype.toString.call(el) === `[object ${curType}]`;\n  }\n  return false;\n};\n"]}]}